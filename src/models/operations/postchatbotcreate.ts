/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PostChatbotCreateRequestBody = {
    /**
     * The name of the chatbot
     */
    name: string;
    /**
     * The ID of the brain associated with the chatbot
     */
    brainId: string;
    urls: Array<string>;
};

/**
 * OK
 */
export type PostChatbotCreateResponseBody = {};

export type PostChatbotCreateResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    object?: PostChatbotCreateResponseBody | undefined;
    headers: { [k: string]: Array<string> };
};

/** @internal */
export namespace PostChatbotCreateRequestBody$ {
    export const inboundSchema: z.ZodType<PostChatbotCreateRequestBody, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            brain_id: z.string(),
            urls: z.array(z.string()),
        })
        .transform((v) => {
            return {
                name: v.name,
                brainId: v.brain_id,
                urls: v.urls,
            };
        });

    export type Outbound = {
        name: string;
        brain_id: string;
        urls: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatbotCreateRequestBody> = z
        .object({
            name: z.string(),
            brainId: z.string(),
            urls: z.array(z.string()),
        })
        .transform((v) => {
            return {
                name: v.name,
                brain_id: v.brainId,
                urls: v.urls,
            };
        });
}

/** @internal */
export namespace PostChatbotCreateResponseBody$ {
    export const inboundSchema: z.ZodType<PostChatbotCreateResponseBody, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatbotCreateResponseBody> =
        z.object({});
}

/** @internal */
export namespace PostChatbotCreateResponse$ {
    export const inboundSchema: z.ZodType<PostChatbotCreateResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            object: z.lazy(() => PostChatbotCreateResponseBody$.inboundSchema).optional(),
            Headers: z.record(z.array(z.string())),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
                headers: v.Headers,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        object?: PostChatbotCreateResponseBody$.Outbound | undefined;
        Headers: { [k: string]: Array<string> };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatbotCreateResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            object: z.lazy(() => PostChatbotCreateResponseBody$.outboundSchema).optional(),
            headers: z.record(z.array(z.string())),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
                Headers: v.headers,
            };
        });
}
