/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PostChatRequestBody = {};

/**
 * CREATED
 */
export type PostChatResponseBody = {};

export type PostChatResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * CREATED
     */
    object?: PostChatResponseBody | undefined;
    headers: { [k: string]: Array<string> };
};

/** @internal */
export namespace PostChatRequestBody$ {
    export const inboundSchema: z.ZodType<PostChatRequestBody, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatRequestBody> = z.object(
        {}
    );
}

/** @internal */
export namespace PostChatResponseBody$ {
    export const inboundSchema: z.ZodType<PostChatResponseBody, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatResponseBody> = z.object(
        {}
    );
}

/** @internal */
export namespace PostChatResponse$ {
    export const inboundSchema: z.ZodType<PostChatResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            object: z.lazy(() => PostChatResponseBody$.inboundSchema).optional(),
            Headers: z.record(z.array(z.string())),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
                headers: v.Headers,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        object?: PostChatResponseBody$.Outbound | undefined;
        Headers: { [k: string]: Array<string> };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            object: z.lazy(() => PostChatResponseBody$.outboundSchema).optional(),
            headers: z.record(z.array(z.string())),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
                Headers: v.headers,
            };
        });
}
