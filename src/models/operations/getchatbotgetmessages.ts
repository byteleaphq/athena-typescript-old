/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetChatbotGetMessagesRequest = {
    chatbotId?: string | undefined;
};

export type GetChatbotGetMessagesResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    chatbotMessages?: components.ChatbotMessages | undefined;
    headers: { [k: string]: Array<string> };
};

/** @internal */
export namespace GetChatbotGetMessagesRequest$ {
    export const inboundSchema: z.ZodType<GetChatbotGetMessagesRequest, z.ZodTypeDef, unknown> = z
        .object({
            chatbot_id: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.chatbot_id === undefined ? null : { chatbotId: v.chatbot_id }),
            };
        });

    export type Outbound = {
        chatbot_id?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetChatbotGetMessagesRequest> = z
        .object({
            chatbotId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.chatbotId === undefined ? null : { chatbot_id: v.chatbotId }),
            };
        });
}

/** @internal */
export namespace GetChatbotGetMessagesResponse$ {
    export const inboundSchema: z.ZodType<GetChatbotGetMessagesResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ChatbotMessages: components.ChatbotMessages$.inboundSchema.optional(),
            Headers: z.record(z.array(z.string())),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ChatbotMessages === undefined
                    ? null
                    : { chatbotMessages: v.ChatbotMessages }),
                headers: v.Headers,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ChatbotMessages?: components.ChatbotMessages$.Outbound | undefined;
        Headers: { [k: string]: Array<string> };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetChatbotGetMessagesResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                chatbotMessages: components.ChatbotMessages$.outboundSchema.optional(),
                headers: z.record(z.array(z.string())),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.chatbotMessages === undefined
                        ? null
                        : { ChatbotMessages: v.chatbotMessages }),
                    Headers: v.headers,
                };
            });
}
