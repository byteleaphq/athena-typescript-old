/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type PostChatNewChatRequestBody = {
    /**
     * The IDs of the brains to associate with the chat
     */
    brainIds: Array<string>;
    /**
     * The name of the chat
     */
    name: string;
    /**
     * The initial message to start the chat
     */
    message: string;
};

export type PostChatNewChatResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    chatInteraction?: components.ChatInteraction | undefined;
    headers: { [k: string]: Array<string> };
};

/** @internal */
export namespace PostChatNewChatRequestBody$ {
    export const inboundSchema: z.ZodType<PostChatNewChatRequestBody, z.ZodTypeDef, unknown> = z
        .object({
            brain_ids: z.array(z.string()),
            name: z.string(),
            message: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                brain_ids: "brainIds",
            });
        });

    export type Outbound = {
        brain_ids: Array<string>;
        name: string;
        message: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatNewChatRequestBody> = z
        .object({
            brainIds: z.array(z.string()),
            name: z.string(),
            message: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                brainIds: "brain_ids",
            });
        });
}

/** @internal */
export namespace PostChatNewChatResponse$ {
    export const inboundSchema: z.ZodType<PostChatNewChatResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ChatInteraction: components.ChatInteraction$.inboundSchema.optional(),
            Headers: z.record(z.array(z.string())),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                ChatInteraction: "chatInteraction",
                Headers: "headers",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ChatInteraction?: components.ChatInteraction$.Outbound | undefined;
        Headers: { [k: string]: Array<string> };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostChatNewChatResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            chatInteraction: components.ChatInteraction$.outboundSchema.optional(),
            headers: z.record(z.array(z.string())),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                chatInteraction: "ChatInteraction",
                headers: "Headers",
            });
        });
}
