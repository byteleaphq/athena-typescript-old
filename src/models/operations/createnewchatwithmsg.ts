/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateNewChatWithMsgRequestBody = {
    /**
     * The IDs of the brains to associate with the chat
     */
    brainIds: Array<string>;
    /**
     * The name of the chat
     */
    name: string;
    /**
     * The initial message to start the chat
     */
    message: string;
};

export type CreateNewChatWithMsgResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    chatInteractions?: Array<components.ChatInteraction> | undefined;
    headers: { [k: string]: Array<string> };
};

/** @internal */
export const CreateNewChatWithMsgRequestBody$inboundSchema: z.ZodType<
    CreateNewChatWithMsgRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        brain_ids: z.array(z.string()),
        name: z.string(),
        message: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            brain_ids: "brainIds",
        });
    });

/** @internal */
export type CreateNewChatWithMsgRequestBody$Outbound = {
    brain_ids: Array<string>;
    name: string;
    message: string;
};

/** @internal */
export const CreateNewChatWithMsgRequestBody$outboundSchema: z.ZodType<
    CreateNewChatWithMsgRequestBody$Outbound,
    z.ZodTypeDef,
    CreateNewChatWithMsgRequestBody
> = z
    .object({
        brainIds: z.array(z.string()),
        name: z.string(),
        message: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            brainIds: "brain_ids",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNewChatWithMsgRequestBody$ {
    /** @deprecated use `CreateNewChatWithMsgRequestBody$inboundSchema` instead. */
    export const inboundSchema = CreateNewChatWithMsgRequestBody$inboundSchema;
    /** @deprecated use `CreateNewChatWithMsgRequestBody$outboundSchema` instead. */
    export const outboundSchema = CreateNewChatWithMsgRequestBody$outboundSchema;
    /** @deprecated use `CreateNewChatWithMsgRequestBody$Outbound` instead. */
    export type Outbound = CreateNewChatWithMsgRequestBody$Outbound;
}

/** @internal */
export const CreateNewChatWithMsgResponse$inboundSchema: z.ZodType<
    CreateNewChatWithMsgResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        ChatInteractions: z.array(components.ChatInteraction$inboundSchema).optional(),
        Headers: z.record(z.array(z.string())),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
            ChatInteractions: "chatInteractions",
            Headers: "headers",
        });
    });

/** @internal */
export type CreateNewChatWithMsgResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    ChatInteractions?: Array<components.ChatInteraction$Outbound> | undefined;
    Headers: { [k: string]: Array<string> };
};

/** @internal */
export const CreateNewChatWithMsgResponse$outboundSchema: z.ZodType<
    CreateNewChatWithMsgResponse$Outbound,
    z.ZodTypeDef,
    CreateNewChatWithMsgResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        chatInteractions: z.array(components.ChatInteraction$outboundSchema).optional(),
        headers: z.record(z.array(z.string())),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
            chatInteractions: "ChatInteractions",
            headers: "Headers",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNewChatWithMsgResponse$ {
    /** @deprecated use `CreateNewChatWithMsgResponse$inboundSchema` instead. */
    export const inboundSchema = CreateNewChatWithMsgResponse$inboundSchema;
    /** @deprecated use `CreateNewChatWithMsgResponse$outboundSchema` instead. */
    export const outboundSchema = CreateNewChatWithMsgResponse$outboundSchema;
    /** @deprecated use `CreateNewChatWithMsgResponse$Outbound` instead. */
    export type Outbound = CreateNewChatWithMsgResponse$Outbound;
}
