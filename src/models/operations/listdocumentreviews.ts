/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ListDocumentReviewsRequest = {
    /**
     * Optional brain ID to filter document reviews
     */
    brainId?: string | undefined;
};

export type ListDocumentReviewsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful retrieval of document reviews
     */
    documentReviewDetails?: Array<components.DocumentReviewDetail> | undefined;
};

/** @internal */
export const ListDocumentReviewsRequest$inboundSchema: z.ZodType<
    ListDocumentReviewsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        brain_id: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            brain_id: "brainId",
        });
    });

/** @internal */
export type ListDocumentReviewsRequest$Outbound = {
    brain_id?: string | undefined;
};

/** @internal */
export const ListDocumentReviewsRequest$outboundSchema: z.ZodType<
    ListDocumentReviewsRequest$Outbound,
    z.ZodTypeDef,
    ListDocumentReviewsRequest
> = z
    .object({
        brainId: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            brainId: "brain_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDocumentReviewsRequest$ {
    /** @deprecated use `ListDocumentReviewsRequest$inboundSchema` instead. */
    export const inboundSchema = ListDocumentReviewsRequest$inboundSchema;
    /** @deprecated use `ListDocumentReviewsRequest$outboundSchema` instead. */
    export const outboundSchema = ListDocumentReviewsRequest$outboundSchema;
    /** @deprecated use `ListDocumentReviewsRequest$Outbound` instead. */
    export type Outbound = ListDocumentReviewsRequest$Outbound;
}

/** @internal */
export const ListDocumentReviewsResponse$inboundSchema: z.ZodType<
    ListDocumentReviewsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        DocumentReviewDetails: z.array(components.DocumentReviewDetail$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
            DocumentReviewDetails: "documentReviewDetails",
        });
    });

/** @internal */
export type ListDocumentReviewsResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    DocumentReviewDetails?: Array<components.DocumentReviewDetail$Outbound> | undefined;
};

/** @internal */
export const ListDocumentReviewsResponse$outboundSchema: z.ZodType<
    ListDocumentReviewsResponse$Outbound,
    z.ZodTypeDef,
    ListDocumentReviewsResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        documentReviewDetails: z.array(components.DocumentReviewDetail$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
            documentReviewDetails: "DocumentReviewDetails",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDocumentReviewsResponse$ {
    /** @deprecated use `ListDocumentReviewsResponse$inboundSchema` instead. */
    export const inboundSchema = ListDocumentReviewsResponse$inboundSchema;
    /** @deprecated use `ListDocumentReviewsResponse$outboundSchema` instead. */
    export const outboundSchema = ListDocumentReviewsResponse$outboundSchema;
    /** @deprecated use `ListDocumentReviewsResponse$Outbound` instead. */
    export type Outbound = ListDocumentReviewsResponse$Outbound;
}
