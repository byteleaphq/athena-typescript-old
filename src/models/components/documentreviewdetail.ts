/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export enum ActiveReadingModel {
    Gpt35Turbo = "gpt-3.5-turbo",
    Claude3Haiku = "claude-3-haiku",
    Mixtral = "mixtral",
}

export enum FinalReviewModel {
    Gpt35Turbo = "gpt-3.5-turbo",
    Gpt4 = "gpt-4",
    ClaudeInstant1 = "claude-instant-1",
    Claude2 = "claude-2",
    Claude3Haiku = "claude-3-haiku",
    Claude3Sonnet = "claude-3-sonnet",
    Claude3Opus = "claude-3-opus",
    Mixtral = "mixtral",
    MistralSmall = "mistral-small",
    MistralMedium = "mistral-medium",
    MistralLarge = "mistral-large",
}

export type DocumentReviewDetail = {
    activeReadingModel?: ActiveReadingModel | undefined;
    brainId?: string | undefined;
    createdOn?: number | undefined;
    docReviewId?: string | undefined;
    documentId?: string | undefined;
    finalReviewModel?: FinalReviewModel | undefined;
    id?: number | undefined;
    prompt?: string | undefined;
    review?: string | undefined;
    title?: string | undefined;
};

/** @internal */
export const ActiveReadingModel$inboundSchema: z.ZodNativeEnum<typeof ActiveReadingModel> =
    z.nativeEnum(ActiveReadingModel);

/** @internal */
export const ActiveReadingModel$outboundSchema: z.ZodNativeEnum<typeof ActiveReadingModel> =
    ActiveReadingModel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActiveReadingModel$ {
    /** @deprecated use `ActiveReadingModel$inboundSchema` instead. */
    export const inboundSchema = ActiveReadingModel$inboundSchema;
    /** @deprecated use `ActiveReadingModel$outboundSchema` instead. */
    export const outboundSchema = ActiveReadingModel$outboundSchema;
}

/** @internal */
export const FinalReviewModel$inboundSchema: z.ZodNativeEnum<typeof FinalReviewModel> =
    z.nativeEnum(FinalReviewModel);

/** @internal */
export const FinalReviewModel$outboundSchema: z.ZodNativeEnum<typeof FinalReviewModel> =
    FinalReviewModel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FinalReviewModel$ {
    /** @deprecated use `FinalReviewModel$inboundSchema` instead. */
    export const inboundSchema = FinalReviewModel$inboundSchema;
    /** @deprecated use `FinalReviewModel$outboundSchema` instead. */
    export const outboundSchema = FinalReviewModel$outboundSchema;
}

/** @internal */
export const DocumentReviewDetail$inboundSchema: z.ZodType<
    DocumentReviewDetail,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        active_reading_model: ActiveReadingModel$inboundSchema.optional(),
        brain_id: z.string().optional(),
        created_on: z.number().int().optional(),
        doc_review_id: z.string().optional(),
        document_id: z.string().optional(),
        final_review_model: FinalReviewModel$inboundSchema.optional(),
        id: z.number().int().optional(),
        prompt: z.string().optional(),
        review: z.string().optional(),
        title: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            active_reading_model: "activeReadingModel",
            brain_id: "brainId",
            created_on: "createdOn",
            doc_review_id: "docReviewId",
            document_id: "documentId",
            final_review_model: "finalReviewModel",
        });
    });

/** @internal */
export type DocumentReviewDetail$Outbound = {
    active_reading_model?: string | undefined;
    brain_id?: string | undefined;
    created_on?: number | undefined;
    doc_review_id?: string | undefined;
    document_id?: string | undefined;
    final_review_model?: string | undefined;
    id?: number | undefined;
    prompt?: string | undefined;
    review?: string | undefined;
    title?: string | undefined;
};

/** @internal */
export const DocumentReviewDetail$outboundSchema: z.ZodType<
    DocumentReviewDetail$Outbound,
    z.ZodTypeDef,
    DocumentReviewDetail
> = z
    .object({
        activeReadingModel: ActiveReadingModel$outboundSchema.optional(),
        brainId: z.string().optional(),
        createdOn: z.number().int().optional(),
        docReviewId: z.string().optional(),
        documentId: z.string().optional(),
        finalReviewModel: FinalReviewModel$outboundSchema.optional(),
        id: z.number().int().optional(),
        prompt: z.string().optional(),
        review: z.string().optional(),
        title: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            activeReadingModel: "active_reading_model",
            brainId: "brain_id",
            createdOn: "created_on",
            docReviewId: "doc_review_id",
            documentId: "document_id",
            finalReviewModel: "final_review_model",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentReviewDetail$ {
    /** @deprecated use `DocumentReviewDetail$inboundSchema` instead. */
    export const inboundSchema = DocumentReviewDetail$inboundSchema;
    /** @deprecated use `DocumentReviewDetail$outboundSchema` instead. */
    export const outboundSchema = DocumentReviewDetail$outboundSchema;
    /** @deprecated use `DocumentReviewDetail$Outbound` instead. */
    export type Outbound = DocumentReviewDetail$Outbound;
}
