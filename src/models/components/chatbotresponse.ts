/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ChatbotResponse = {
    /**
     * The API key for the chatbot
     */
    apiKey?: string | null | undefined;
    /**
     * The ID of the brain associated with the chatbot
     */
    brainId?: string | undefined;
    /**
     * The creation timestamp of the chatbot
     */
    createdAt?: string | undefined;
    /**
     * The ID of the chatbot
     */
    id?: string | undefined;
    /**
     * The name of the chatbot
     */
    name?: string | undefined;
    /**
     * An array of URLs associated with the chatbot
     */
    urls?: Array<string> | null | undefined;
    /**
     * The ID of the user who owns the chatbot
     */
    userId?: string | undefined;
};

/** @internal */
export namespace ChatbotResponse$ {
    export const inboundSchema: z.ZodType<ChatbotResponse, z.ZodTypeDef, unknown> = z
        .object({
            api_key: z.nullable(z.string()).optional(),
            brain_id: z.string().optional(),
            created_at: z.string().optional(),
            id: z.string().optional(),
            name: z.string().optional(),
            urls: z.nullable(z.array(z.string())).optional(),
            user_id: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.api_key === undefined ? null : { apiKey: v.api_key }),
                ...(v.brain_id === undefined ? null : { brainId: v.brain_id }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.urls === undefined ? null : { urls: v.urls }),
                ...(v.user_id === undefined ? null : { userId: v.user_id }),
            };
        });

    export type Outbound = {
        api_key?: string | null | undefined;
        brain_id?: string | undefined;
        created_at?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
        urls?: Array<string> | null | undefined;
        user_id?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatbotResponse> = z
        .object({
            apiKey: z.nullable(z.string()).optional(),
            brainId: z.string().optional(),
            createdAt: z.string().optional(),
            id: z.string().optional(),
            name: z.string().optional(),
            urls: z.nullable(z.array(z.string())).optional(),
            userId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.apiKey === undefined ? null : { api_key: v.apiKey }),
                ...(v.brainId === undefined ? null : { brain_id: v.brainId }),
                ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.urls === undefined ? null : { urls: v.urls }),
                ...(v.userId === undefined ? null : { user_id: v.userId }),
            };
        });
}
